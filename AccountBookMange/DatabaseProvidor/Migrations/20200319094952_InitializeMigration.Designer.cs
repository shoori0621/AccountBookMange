// <auto-generated />
using System;
using DatabaseProvidor.Accesses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseProvidor.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    [Migration("20200319094952_InitializeMigration")]
    partial class InitializeMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("DatabaseProvidor.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DeleteFlag")
                        .HasColumnName("delete_flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("account");
                });

            modelBuilder.Entity("DatabaseProvidor.Models.CreditCard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DeleteFlag")
                        .HasColumnName("delete_flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("credit_card");
                });

            modelBuilder.Entity("DatabaseProvidor.Models.Income", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("IncomeDate")
                        .HasColumnName("income_date")
                        .HasColumnType("TEXT");

                    b.Property<long?>("IncomeKind")
                        .HasColumnName("income_kind")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("IncomePrice")
                        .HasColumnName("income_price")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("income");
                });

            modelBuilder.Entity("DatabaseProvidor.Models.Move", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MovePrice")
                        .HasColumnName("move_price")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("NextAccountId")
                        .HasColumnName("next_account_id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PreAccountId")
                        .HasColumnName("pre_account_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartDate")
                        .HasColumnName("start_date")
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("move");
                });

            modelBuilder.Entity("DatabaseProvidor.Models.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccountId")
                        .HasColumnName("account_id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CardId")
                        .HasColumnName("card_id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentDate")
                        .HasColumnName("payment_date")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PaymentKind")
                        .HasColumnName("payment_kind")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PaymentPrice")
                        .HasColumnName("payment_price")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PaymentWay")
                        .HasColumnName("payment_way")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("DatabaseProvidor.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account")
                        .HasColumnName("account")
                        .HasColumnType("TEXT");

                    b.Property<long?>("DeleteFlag")
                        .HasColumnName("delete_flag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
